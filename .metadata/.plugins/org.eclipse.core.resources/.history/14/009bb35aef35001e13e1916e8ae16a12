import java.io.FileWriter;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.Random;
import java.util.Scanner;
import java.util.Timer;
import java.util.TimerTask;

public class MathQuizApplication {
    private static int remainingTime;
    private static boolean timerExpired = false;
    private static Map<String, Integer> operationCounts = new HashMap<>();
    private static Map<String, Integer> correctCounts = new HashMap<>();

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Welcome to Math Quiz!");
        System.out.print("Enter your name: ");
        String studentName = scanner.nextLine();

        System.out.println("Do you need extended time? (yes/no): ");
        boolean extendedTime = scanner.nextLine().equalsIgnoreCase("yes");

        int totalTime = extendedTime ? 60 : 45; // minutes
        remainingTime = totalTime;

        Timer timer = new Timer();
        timer.scheduleAtFixedRate(new TimerTask() {
            public void run() {
                if (remainingTime == 0) {
                    timerExpired = true;
                    timer.cancel();
                } else {
                    remainingTime--;
                }
            }
        }, 1000, 60000); // Decrease remaining time every minute

        int totalQuestions = 20;
        int correctAnswers = 0;

        Random random = new Random();

        for (int i = 1; i <= totalQuestions; i++) {
            if (timerExpired) {
                System.out.println("Time's up! The quiz has ended.");
                break;
            }

            int num1 = random.nextInt(50) + 1;
            int num2 = random.nextInt(50) + 1;

            int operator = random.nextInt(4); // 0: addition, 1: subtraction, 2: multiplication, 3: division
            char operatorChar = ' ';

            double correctResult = 0.0; // Use double for division
            String questionType = "";

            switch (operator) {
                case 0:
                    operatorChar = '+';
                    correctResult = num1 + num2;
                    questionType = "Addition";
                    break;
                case 1:
                    operatorChar = '-';
                    if (num1 < num2) {
                        int temp = num1;
                        num1 = num2;
                        num2 = temp;
                    }
                    correctResult = num1 - num2;
                    questionType = "Subtraction";
                    break;
                case 2:
                    operatorChar = '*';
                    correctResult = num1 * num2;
                    questionType = "Multiplication";
                    break;
                case 3:
                    operatorChar = '/';
                    correctResult = (double) num1 / num2; // Allow decimals for division
                    questionType = "Division";
                    break;
            }

            // Display question and get user answer
            System.out.print("Question " + i + " (" + questionType + "): " + num1 + " " + operatorChar + " " + num2 + " = ");
            double userAnswer = scanner.nextDouble();

            // Compare user answer with correct result
            if (Math.abs(userAnswer - correctResult) < 0.1) { // Allow answers within 1 decimal place
                correctAnswers++;

                // Update correct answer counts
                String operationType = getOperationType(operator);
                correctCounts.put(operationType, correctCounts.getOrDefault(operationType, 0) + 1);
            }

            // Update operation counts
            String operationType = getOperationType(operator);
            operationCounts.put(operationType, operationCounts.getOrDefault(operationType, 0) + 1);

            // Display remaining time for every 10 questions
            if (i % 10 == 0) {
                System.out.println("Time remaining: " + remainingTime + " minutes");
            }
        }

        try {
            FileWriter fileWriter = new FileWriter("results.txt", true);
            fileWriter.write(studentName + ":\n");
            fileWriter.write("Correct Answers: " + correctAnswers + "\n");
            fileWriter.write("Incorrect Answers: " + (totalQuestions - correctAnswers) + "\n");
            fileWriter.write("\nOperation Counts:\n");
            for (Map.Entry<String, Integer> entry : operationCounts.entrySet()) {
                String operationType = entry.getKey();
                int count = entry.getValue();
                fileWriter.write(operationType + " Count: " + count + "\n");
                if (correctCounts.containsKey(operationType)) {
                    fileWriter.write(operationType + " Correct: " + correctCounts.get(operationType) + "\n");
                }
            }
            fileWriter.write("\n");
            fileWriter.close();
        } catch (IOException e) {
            e.printStackTrace();
        }

        System.out.println("Quiz completed!");
        System.out.println("Total correct answers: " + correctAnswers);

        int grade = calculateGrade(correctAnswers);
        System.out.println("Grade: " + getGradeText(grade));
    }

    private static int calculateGrade(int correctAnswers) {
        if (correctAnswers <= 4) {
            return 0;
        } else if (correctAnswers <= 10) {
            return 1;
        } else if (correctAnswers <= 16) {
            return 2;
        } else {
            return 3;
        }
    }

    private static String getGradeText(int grade) {
        switch (grade) {
            case 0:
                return "Fail";
            case 1:
                return "Pass";
            case 2:
                return "Merit";
            case 3:
                return "Distinction";
            default:
                return "Invalid Grade";
        }
    }

    private static String getOperationType(int operator) {
        switch (operator) {
            case 0:
                return "Addition";
            case 1:
                return "Subtraction";
            case 2:
                return "Multiplication";
            case 3:
                return "Division";
            default:
                return "Unknown";
        }
    }
}
