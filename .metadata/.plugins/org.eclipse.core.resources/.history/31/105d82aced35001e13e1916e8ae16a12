import java.io.FileWriter;
import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

public class MathQuizApplication {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Welcome to Math Quiz!");
        System.out.print("Enter your name: ");
        String studentName = scanner.nextLine();

        System.out.println("Do you need extended time? (yes/no): ");
        boolean extendedTime = scanner.nextLine().equalsIgnoreCase("yes");

        int totalTime = extendedTime ? 60 : 45; // minutes
        int remainingTime = totalTime;

        int totalQuestions = 20;
        int correctAnswers = 0;

        Random random = new Random();

        for (int i = 1; i <= totalQuestions; i++) {
            int num1 = random.nextInt(50) + 1;
            int num2 = random.nextInt(50) + 1;

            int operator = random.nextInt(4); // 0: addition, 1: subtraction, 2: multiplication, 3: division
            char operatorChar = ' ';

            int correctResult = 0;
            String questionType = "";

            switch (operator) {
                case 0:
                    operatorChar = '+';
                    correctResult = num1 + num2;
                    questionType = "Addition";
                    break;
                case 1:
                    operatorChar = '-';
                    if (num1 < num2) {
                        int temp = num1;
                        num1 = num2;
                        num2 = temp;
                    }
                    correctResult = num1 - num2;
                    questionType = "Subtraction";
                    break;
                case 2:
                    operatorChar = '*';
                    correctResult = num1 * num2;
                    questionType = "Multiplication";
                    break;
                case 3:
                    operatorChar = '/';
                    correctResult = num1; // Assume division result is num1
                    questionType = "Division";
                    break;
            }

            if (i <= totalQuestions / 2) {
                System.out.print("Question " + i + " (" + questionType + "): " + num1 + " " + operatorChar + " " + num2 + " = ");
            } else {
                int num3 = random.nextInt(50) + 1;
                int operator2 = random.nextInt(2); // 0: addition, 1: subtraction
                char operatorChar2 = operator2 == 0 ? '+' : '-';
                int result1 = operator == 0 ? num1 + num2 : (operator == 1 ? num1 - num2 : (operator == 2 ? num1 * num2 : num1));
                int result2 = operator2 == 0 ? result1 + num3 : result1 - num3;
                System.out.print("Question " + i + " (" + questionType + "): " + num1 + " " + operatorChar + " " + num2 +
                                 " " + operatorChar2 + " " + num3 + " = ");
                correctResult = result2;
            }

            int userAnswer = scanner.nextInt();

            if (userAnswer == correctResult) {
                correctAnswers++;
            }

            if (i % 10 == 0) {
                System.out.println("Time remaining: " + remainingTime + " minutes");
                remainingTime -= (extendedTime ? 3 : 4); // Decrease time for every 10 questions
            }
        }

        try {
            FileWriter fileWriter = new FileWriter("results.txt", true);
            fileWriter.write(studentName + ":\n");
            fileWriter.write("Correct Answers: " + correctAnswers + "\n");
            fileWriter.write("Incorrect Answers: " + (totalQuestions - correctAnswers) + "\n\n");
            fileWriter.close();
        } catch (IOException e) {
            e.printStackTrace();
        }

        System.out.println("Quiz completed!");
        System.out.println("Total correct answers: " + correctAnswers);

        int grade = calculateGrade(correctAnswers);
        System.out.println("Grade: " + getGradeText(grade));
    }

    private static int calculateGrade(int correctAnswers) {
        if (correctAnswers <= 4) {
            return 0;
        } else if (correctAnswers <= 10) {
            return 1;
        } else if (correctAnswers <= 16) {
            return 2;
        } else {
            return 3;
        }
    }

    private static String getGradeText(int grade) {
        switch (grade) {
            case 0:
                return "Fail";
            case 1:
                return "Pass";
            case 2:
                return "Merit";
            case 3:
                return "Distinction";
            default:
                return "Invalid Grade";
        }
    }
}
